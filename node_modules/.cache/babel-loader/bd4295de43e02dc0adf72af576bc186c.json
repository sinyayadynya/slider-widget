{"ast":null,"code":"import _classCallCheck from\"/Users/sahaj/Sites/_react/slider-widget/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/sahaj/Sites/_react/slider-widget/node_modules/@babel/runtime/helpers/esm/createClass.js\";/**\n * @file\n * Class to identify the correct language code.\n *\n * FIXME Langcode esla fallsback to es, because there is not a langcode\n *       to include all latin american Spanish variants on react-intl.\n */import messages_en from'../../locales/en.json';import messages_es from'../../locales/es.json';import messages_fr from'../../locales/fr.json';import messages_ru from'../../locales/ru.json';var localeData={en:messages_en,es:messages_es,fr:messages_fr,ru:messages_ru};var i18n=/*#__PURE__*/function(){function i18n(langcode){_classCallCheck(this,i18n);this.locale=langcode;}_createClass(i18n,[{key:\"mapLocale\",value:function mapLocale(langcode){// Specific overrides.\nswitch(langcode){default:return langcode;}// Check messages for locale\nif(typeof localeData[langcode.toLowerCase()]!=='undefined'){return langcode.toLowerCase();}// Check messages for language\nvar locale=langcode.split('-',2);if(typeof localeData[locale[0]]!=='undefined'){return locale[0];}// Default is English\nreturn'en';}},{key:\"locale\",get:function get(){return this._locale;},set:function set(langcode){this._locale=this.mapLocale(langcode||'en');}},{key:\"messages\",get:function get(){return localeData[this.locale];}}]);return i18n;}();export{i18n as default};","map":{"version":3,"names":["messages_en","messages_es","messages_fr","messages_ru","localeData","en","es","fr","ru","i18n","langcode","locale","toLowerCase","split","_locale","mapLocale"],"sources":["/Users/sahaj/Sites/_react/slider-widget/src/core/bin/i18n.js"],"sourcesContent":["/**\n * @file\n * Class to identify the correct language code.\n *\n * FIXME Langcode esla fallsback to es, because there is not a langcode\n *       to include all latin american Spanish variants on react-intl.\n */\nimport messages_en from '../../locales/en.json'\nimport messages_es from '../../locales/es.json'\nimport messages_fr from '../../locales/fr.json'\nimport messages_ru from '../../locales/ru.json'\n\nconst localeData = {\n  en: messages_en,\n  es: messages_es,\n  fr: messages_fr,\n  ru: messages_ru,\n}\n\nexport default class i18n {\n  constructor(langcode) {\n    this.locale = langcode\n  }\n\n  mapLocale(langcode) {\n    // Specific overrides.\n    switch (langcode) {\n      default:\n        return langcode\n    }\n\n    // Check messages for locale\n    if (typeof localeData[langcode.toLowerCase()] !== 'undefined') {\n      return langcode.toLowerCase()\n    }\n\n    // Check messages for language\n    const locale = langcode.split('-', 2)\n    if (typeof localeData[locale[0]] !== 'undefined') {\n      return locale[0]\n    }\n\n    // Default is English\n    return 'en'\n  }\n\n  set locale(langcode) {\n    this._locale = this.mapLocale(langcode || 'en')\n  }\n\n  get locale() {\n    return this._locale\n  }\n\n  get messages() {\n    return localeData[this.locale]\n  }\n}\n"],"mappings":"wPAAA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAOA,YAAW,KAAM,uBAAuB,CAC/C,MAAOC,YAAW,KAAM,uBAAuB,CAC/C,MAAOC,YAAW,KAAM,uBAAuB,CAC/C,MAAOC,YAAW,KAAM,uBAAuB,CAE/C,GAAMC,WAAU,CAAG,CACjBC,EAAE,CAAEL,WAAW,CACfM,EAAE,CAAEL,WAAW,CACfM,EAAE,CAAEL,WAAW,CACfM,EAAE,CAAEL,WACN,CAAC,IAEoBM,KAAI,yBACvB,cAAYC,QAAQ,CAAE,4BACpB,IAAI,CAACC,MAAM,CAAGD,QAAQ,CACxB,CAAC,0CAED,mBAAUA,QAAQ,CAAE,CAClB;AACA,OAAQA,QAAQ,EACd,QACE,MAAOA,SAAQ,EAGnB;AACA,GAAI,MAAON,WAAU,CAACM,QAAQ,CAACE,WAAW,EAAE,CAAC,GAAK,WAAW,CAAE,CAC7D,MAAOF,SAAQ,CAACE,WAAW,EAAE,CAC/B,CAEA;AACA,GAAMD,OAAM,CAAGD,QAAQ,CAACG,KAAK,CAAC,GAAG,CAAE,CAAC,CAAC,CACrC,GAAI,MAAOT,WAAU,CAACO,MAAM,CAAC,CAAC,CAAC,CAAC,GAAK,WAAW,CAAE,CAChD,MAAOA,OAAM,CAAC,CAAC,CAAC,CAClB,CAEA;AACA,MAAO,IAAI,CACb,CAAC,oBAMD,cAAa,CACX,MAAO,KAAI,CAACG,OAAO,CACrB,CAAC,KAND,aAAWJ,QAAQ,CAAE,CACnB,IAAI,CAACI,OAAO,CAAG,IAAI,CAACC,SAAS,CAACL,QAAQ,EAAI,IAAI,CAAC,CACjD,CAAC,sBAMD,cAAe,CACb,MAAON,WAAU,CAAC,IAAI,CAACO,MAAM,CAAC,CAChC,CAAC,2BArCkBF,IAAI"},"metadata":{},"sourceType":"module"}