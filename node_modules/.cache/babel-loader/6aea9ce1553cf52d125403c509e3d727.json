{"ast":null,"code":"import React from'react';import ReactDOM from'react-dom';import App from'./App';import'./index.css';import*as serviceWorker from'./core/bin/serviceWorker';import{IntlProvider}from'react-intl';import i18n from'./core/bin/i18n.js';/**\n * Renders the widget.\n *\n * It renders a react application as the widget.\n *\n * @param {string} instanceId\n *   The already present HTML element ID where the react app will be rendered.\n * @param {string} langCode\n *   The language code for internationalization purposes.\n * @param {string} origin\n *   Protocol and hostname where a JSONAPI endpoint is available.\n * @param {Function} cb\n *   A callback that executes after the widget has been rendered.\n */import{jsx as _jsx}from\"react/jsx-runtime\";function render(instanceId,langCode,origin,cb){var element=document.getElementById(instanceId);var translation=new i18n(langCode||serviceWorker.getUrlLocale());ReactDOM.render(/*#__PURE__*/_jsx(React.StrictMode,{children:/*#__PURE__*/_jsx(IntlProvider,{locale:translation.locale,messages:translation.messages,children:/*#__PURE__*/_jsx(App,{element:element})})}),element,function(){return cb(element);});serviceWorker.unregister();}window.renderSliderWidget=render;","map":{"version":3,"names":["React","ReactDOM","App","serviceWorker","IntlProvider","i18n","render","instanceId","langCode","origin","cb","element","document","getElementById","translation","getUrlLocale","locale","messages","unregister","window","renderSliderWidget"],"sources":["/Users/sahaj/Sites/_react/slider-widget/src/index.js"],"sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport * as serviceWorker from './core/bin/serviceWorker'\nimport { IntlProvider } from 'react-intl'\nimport i18n from './core/bin/i18n.js'\n\n/**\n * Renders the widget.\n *\n * It renders a react application as the widget.\n *\n * @param {string} instanceId\n *   The already present HTML element ID where the react app will be rendered.\n * @param {string} langCode\n *   The language code for internationalization purposes.\n * @param {string} origin\n *   Protocol and hostname where a JSONAPI endpoint is available.\n * @param {Function} cb\n *   A callback that executes after the widget has been rendered.\n */\nfunction render(instanceId, langCode, origin, cb) {\n  const element = document.getElementById(instanceId)\n  const translation = new i18n(langCode || serviceWorker.getUrlLocale())\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <IntlProvider locale={translation.locale} messages={translation.messages}>\n        <App element={element} />\n      </IntlProvider>\n    </React.StrictMode>,\n    element,\n    () => cb(element),\n  )\n  serviceWorker.unregister()\n}\n\nwindow.renderSliderWidget = render\n"],"mappings":"AAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,MAAOC,SAAQ,KAAM,WAAW,CAChC,MAAOC,IAAG,KAAM,OAAO,CACvB,MAAO,aAAa,CACpB,MAAO,GAAKC,cAAa,KAAM,0BAA0B,CACzD,OAASC,YAAY,KAAQ,YAAY,CACzC,MAAOC,KAAI,KAAM,oBAAoB,CAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAbA,2CAcA,QAASC,OAAM,CAACC,UAAU,CAAEC,QAAQ,CAAEC,MAAM,CAAEC,EAAE,CAAE,CAChD,GAAMC,QAAO,CAAGC,QAAQ,CAACC,cAAc,CAACN,UAAU,CAAC,CACnD,GAAMO,YAAW,CAAG,GAAIT,KAAI,CAACG,QAAQ,EAAIL,aAAa,CAACY,YAAY,EAAE,CAAC,CAEtEd,QAAQ,CAACK,MAAM,cACb,KAAC,KAAK,CAAC,UAAU,wBACf,KAAC,YAAY,EAAC,MAAM,CAAEQ,WAAW,CAACE,MAAO,CAAC,QAAQ,CAAEF,WAAW,CAACG,QAAS,uBACvE,KAAC,GAAG,EAAC,OAAO,CAAEN,OAAQ,EAAG,EACZ,EACE,CACnBA,OAAO,CACP,iBAAMD,GAAE,CAACC,OAAO,CAAC,GAClB,CACDR,aAAa,CAACe,UAAU,EAAE,CAC5B,CAEAC,MAAM,CAACC,kBAAkB,CAAGd,MAAM"},"metadata":{},"sourceType":"module"}